
@using ToyStore.Models;
@using ToyStore.ViewsModel;
@model IndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body>
      <div id="alerts"></div>
<div class="productcont">
     @foreach (Toys toy in Model.Toys){
        <div class="product">
            <h3 class="productname">@toy.toy_name</h3>
            <p>@toy.description</p>
            <p class="price">@toy.price</p>
            <button class="addtocart">Add To Cart</button>
        </div>
     }
        </div>
        <div class="cart-container">
          <h2>Cart</h2>
          <table>
            <thead>
              <tr>
              <th><strong>Product</strong></th>
              <th><strong>Price</strong></th>
            </tr>
            </thead>
            <tbody id="carttable">
            </tbody>
          </table>
          <hr>
          <table id="carttotals">
            <tr>
              <td><strong>Items</strong></td>
              <td><strong>Total</strong></td>
            </tr>
            <tr>
              <td>x <span id="itemsquantity">0</span></td>
             
              <td>$<span id="total">0</span></td>
            </tr></table>

            
          <div class="cart-buttons">  
            <button id="emptycart">Empty Cart</button>
            <button id="checkout">Checkout</button>
          </div>
        </div>
</div>
<div class="slideshow-container">

<div class="mySlides fade">
  <div class="numbertext">1 / 4</div>
  <img src="https://www.i-igrushki.ru/upload/medialibrary/a10/a109743805b253a5a7cdbd0af72932a1.jpg" style="width:100%">
  <div class="text">Caption Text</div>
</div>

<div class="mySlides fade">
  <div class="numbertext">2 / 4</div>
  <img src="https://images.ua.prom.st/652184802_w640_h640_fisher_prays_0.jpg" style="width:100%">
  <div class="text">Caption Two</div>
</div>

<div class="mySlides fade">
  <div class="numbertext">3 / 4</div>
  <img src="https://thumbs.dreamstime.com/z/вид-сверху-на-детские-игрушки-голубом-фоне-столе-концепция-рекламных-162976019.jpg" style="width:100%">
  <div class="text">Caption Three</div>
</div>

<div class="mySlides fade">
  <div class="numbertext">4 / 4</div>
  <img src="https://education.lego.com/v3/assets/blt293eea581807678a/blt393b7ca2feefb0c1/60d2cd32ae0d50495b4f911f/LLS_ModDetail_04.png?auto=webp&format=png&width=1800&quality=90&fit=bounds" style="width:100%"/>
  <div class="text">Caption Three</div>
</div>

</div>
<br>

<div id="parent">
<div class="grid-container">
      <div class="grid-item">Акции</div>
            <div class="grid-item">Хит</div>
                 <div class="grid-item">Распродажа</div>
                     <div class="grid-item">Новинка</div>
                     </div>

               
          @foreach (Toys toy in Model.Toys){
                    <div class="productcont">
                <div class="product">
          @*  <div class="child">
              <p class="toy_name">   Наименование: @toy.toy_name</p> <br>
              <p class="description">   Описание: @toy.description </p><br>
              <p class="price" >  Цена: @toy.price </p><br>

                  <p class="price">$5.05</p>
                    <button class="addtocart">Add To Cart</button>

               
                 @using(Html.BeginForm("Index", "Home",new {toyId = @toy.Id, userId =@ViewBag.currentId}, FormMethod.Post))
                {        
                    <input type="text" value="@toy.toy_name" hidden name="toy_name">
                    <input type="text" value="@toy.description" hidden name="description">
                    <input type="text" value="@toy.price" hidden name="price">
                    
                   
                     <input type="submit" value="В корзину" />
                }
            </div>*@
            </div></div>
          }
</div>


@*<div style="text-align:center">
  <span class="dot"></span> 
  <span class="dot"></span> 
  <span class="dot"></span> 
   <span class="dot"></span> 
</div>


*@

          

 <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css"/>

<script>
//var slideIndex = 0;
//showSlides();

//function showSlides() {
//    var i;
//    var slides = document.getElementsByClassName("mySlides");
//    var dots = document.getElementsByClassName("dot");
//    for (i = 0; i < slides.length; i++) {
//       slides[i].style.display = "none";  
//    }
//    slideIndex++;
//    if (slideIndex > slides.length) {slideIndex = 1}    
//    for (i = 0; i < dots.length; i++) {
//        dots[i].className = dots[i].className.replace(" active", "");
//    }
//    slides[slideIndex-1].style.display = "block";  
//    dots[slideIndex-1].className += " active";
//    setTimeout(showSlides, 3000); // Change image every 3 seconds
//}

/* get cart total from session on load */
updateCartTotal();

/* button event listeners */
document.getElementById("emptycart").addEventListener("click", emptyCart);
var btns = document.getElementsByClassName('addtocart');
for (var i = 0; i < btns.length; i++) {
    btns[i].addEventListener('click', function() {addToCart(this);});
}

/* ADD TO CART functions */

function addToCart(elem) {
   
    //init
    var sibs = [];
    var getprice;
    var getproductName;
    var cart = [];
     var stringCart;
    while(elem = elem.previousSibling) {
        
        if  (elem.nodeType === 3) continue; // text node
        if  (elem.className == "price"){
            getprice = elem.innerText;
        }
        if (elem.className == "productname") {
             console.log( elem.innerText);
            getproductName=elem.innerHTML;
        }
        sibs.push(elem);
    }
    var product = {
        productname : getproductName,
        price : getprice
    };
    var stringProduct = JSON.stringify(product);
    
    if(!sessionStorage.getItem('cart')){
        cart.push(stringProduct);
        stringCart = JSON.stringify(cart);
        sessionStorage.setItem('cart', stringCart);
        addedToCart(getproductName);
        updateCartTotal();
    }
    else {
        cart = JSON.parse(sessionStorage.getItem('cart'));
        cart.push(stringProduct);
        stringCart = JSON.stringify(cart);
        sessionStorage.setItem('cart', stringCart);
        addedToCart(getproductName);
        updateCartTotal();
    }
}
/* Calculate Cart Total */
function updateCartTotal(){
    //init
    var total = 0;
    var price = 0;
    var items = 0;
    var productname = "";
    var carttable = "";
    if(sessionStorage.getItem('cart')) {
        var cart = JSON.parse(sessionStorage.getItem('cart'));
        items = cart.length;
        
        for (var i = 0; i < items; i++){
            var x = JSON.parse(cart[i]);
            price = parseFloat(x.price);
            productname = x.productname;
            carttable += "<tr><td>" + productname + "</td><td>$" + price.toFixed(2) + "</td></tr>";
            total += price;
        }     
    }
    document.getElementById("total").innerHTML = total.toFixed(2);
    document.getElementById("carttable").innerHTML = carttable;
    document.getElementById("itemsquantity").innerHTML = items;
}
//user feedback on successful add
function addedToCart(pname) {
    
  var message = pname + " был добавлен в корзину";
  console.log(message);
  var alerts = document.getElementById("alerts");
  alerts.innerHTML = message;
  if(!alerts.classList.contains("message")){
     alerts.classList.add("message");
  }
}
function emptyCart() {
    //remove cart session storage object & refresh cart totals
    if(sessionStorage.getItem('cart')){
        sessionStorage.removeItem('cart');
        updateCartTotal();
      //clear message and remove class style
      var alerts = document.getElementById("alerts");
      alerts.innerHTML = "";
      if(alerts.classList.contains("message")){
          alerts.classList.remove("message");
      }
    }
}

    </script>
</body>
</html> 



<style>
   .grid-container {
  display: grid;
  grid-template-columns: auto auto ;
  background-color: #2196F3;
  padding: 10px;
}

.grid-item {
  background-color: rgba(255, 255, 255, 0.8);
  border: 1px solid rgba(0, 0, 0, 0.8);
  padding: 20px;
  font-size: 30px;
  text-align: center;
}

    #parent{
    Display:inline-block;
    Justify-content: space-between;
    max-height: auto;
     gap: 20px;
     width: 100%;
}
.child{
    position: relative;
    margin: 5px;
    margin-left:40px;
    display: inline-block;
    height: 150px;
    width:25vw;
    border: 1px solid blue;
    background-color: rgba(255, 255, 255, 0.8);

}
   
</style>